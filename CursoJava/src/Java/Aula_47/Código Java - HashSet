===============================
          Aula 47
===============================

Classe: Aula_47A
-------------------------------
- Objetivo: Demonstrar o uso de `HashSet` para armazenar elementos únicos em Java.
- O que faz:
  - Cria um conjunto de nomes e verifica se um nome específico está presente.

  Código:
  package Java.Aula_47;

  import java.util.HashSet;

  public class Aula_47A {
      public static void main(String[] args) {
          HashSet<String> nome = new HashSet<String>();
          nome.add("Lucas");
          nome.add("Leonardo");
          nome.add("Leandro");
          nome.add("Luka");
          nome.add("Pedro");
          nome.add("Sebastião");
          nome.add("Simon");
          
          // System.out.println(nome.add("Matheus")?"SIM":"NÃO");
          System.out.println(nome.contains("Lucas") ? "Sim" : "Não");
          System.out.println(nome);
      }
  }

===============================
          Explicação
===============================

1. **Uso de HashSet**:
   - `HashSet` é uma coleção que não permite elementos duplicados e não mantém a ordem de inserção.

2. **Verificação de Elementos**:
   - O método `contains()` é utilizado para verificar se um determinado elemento está presente no conjunto.

===============================
          Saída Esperada
===============================

Quando o método `main` da classe é executado, a saída será:
Sim
[Luka, Pedro, Lucas, Simon, Leonardo, Leandro, Sebastião]





(Note que a ordem dos elementos pode variar, já que `HashSet` não garante a ordem.)

===============================
          Resumo
===============================

- **Manipulação de Conjuntos**: O exemplo demonstra como utilizar `HashSet` para gerenciar uma coleção de elementos únicos.
- **Verificação de Existência**: Mostra como verificar a presença de um elemento no conjunto de forma eficiente.

===============================
          Fim
===============================